trigger:
  branches:
    include:
      - main

pool:
  name: $(agent_pool_name)

parameters:
  - name: environ
    displayName: Environment
    type: string
    values:
      - prod
      - dev
    default: dev

variables: 
  - group: 'medfast-global-vars'

  # Environment-specific variables
  ${{ if eq(parameters.environ, 'dev') }}:
    resource_group_name: 'medfast-rg-dev'
  ${{ if eq(parameters.environ, 'prod') }}:
    resource_group_name: 'medfast-rg-prod'
  

stages:
  - stage: Deploy
    jobs:
      - job: DeployAKS
        steps:
        - task: TerraformInstaller@1
          displayName: 'Install Terraform'
          inputs:
            terraformVersion: '1.10.0' 

        - task: TerraformTaskV4@4
          displayName: 'Terraform Init'
          inputs:
            provider: 'azurerm'
            command: 'init'
            backendServiceArm: $(service_connection)
            backendAzureRmResourceGroupName: $(resource_group_name)
            backendAzureRmStorageAccountName: $(storage_account_name)
            backendAzureRmContainerName: $(storage_container_name)
            backendAzureRmKey: $(tf_state_file)
            workingDirectory: '$(System.DefaultWorkingDirectory)/infra/tf/app-cluster'

        - task: TerraformTaskV4@4
          displayName: 'Terraform Validate'
          inputs:
            provider: 'azurerm'
            command: 'validate'
            workingDirectory: '$(System.DefaultWorkingDirectory)/infra/tf/app-cluster'

        - task: TerraformTaskV4@4
          displayName: 'Terraform Plan'
          inputs:
            provider: 'azurerm'
            command: 'plan'
            commandOptions: '-out=main.tfplan -input=false --var-file=$(System.DefaultWorkingDirectory)/infra/tf/dev.tfvars'
            workingDirectory: '$(System.DefaultWorkingDirectory)/infra/tf/app-cluster'

        - task: TerraformTaskV4@4
          displayName: 'Terraform Apply'
          inputs:
            provider: 'azurerm'
            command: 'apply'
            commandOptions: '-auto-approve main.tfplan'
            workingDirectory: '$(System.DefaultWorkingDirectory)/infra/tf/app-cluster'

      - job: DeployApp
        steps:
          - task: HelmInstaller@1
            displayName: Install Helm
            inputs: 
              helmVersionToInstall: '3.16.3'

          - task: HelmDeploy@1
            inputs:
              connectionType: 'Azure Resource Manager'
              azureSubscription: $(service_connection)
              azureResourceGroup: $(resource_group_name)
              kubernetesCluster: $(cluster_name)
              command: 'upgrade'
              chartType: FilePath
              chartPath: '$(System.DefaultWorkingDirectory)/infra/medfast-chart'
              releaseName: $(helm_release_name)
              install: true
              arguments: "--atomic --force --timeout 10m0s --wait"
            displayName: 'Deploy Helm Chart'
  
